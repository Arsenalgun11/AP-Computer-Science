// FileName:  ForLoopMania1.javapackage ch05;import java.util.Scanner;public class ForLoopMania1{	public static void main(String [] args)	{			// Part 1.  Write the code for a count-up for loop that will sum		// the integers from 101 to 200 inclusive and then print the sum only once.		int sum = 0;		for (int cntr = 101; cntr <= 200; cntr++)		{			sum += cntr;		}		System.out.println(" The sum is: " + sum);		System.out.println();		System.out.println();		// *******************************************************************		// Part 2.  Write the code for a count-down for loop that will reverse sum		// the integers from 200 down to 101, inclusive.  The loop should calculate		// the sum by first adding 200 to 199 to 198, etc.  The sum should be printed		// only once.		sum = 0;		for (int cntr = 200; cntr >= 101; cntr--)		{			sum+=cntr;		}		System.out.println(" The sum is: " + sum);			System.out.println();		System.out.println();		// *******************************************************************		// Part 3. Write a count-up for loop that generates 10 random integers.		// The range is from -100 to 100 inclusive. Every time the random integer		// is generated, it will be printed right justified in a field width of 4		// after the phrase "The random number is".  If the random value generated		// is negative then it will be added to the variable negativeSum.  If the		// random value generated is positive then it will be added to positiveSum.		// The final sums should be printed only one time right justified in a field		// width of 5 after the phrases seen below for the sums.		// Here is a sample run of the program for this code segment:			/*				The random number is   -22				The random number is    31				The random number is   -63				The random number is    93				The random number is   -36				The random number is    30				The random number is    47				The random number is   -44				The random number is   -20				The random number is   -71				The sum of the positive random integers is  201				The sum of the negative random integers is -256		 */		int random1 = 0;		int positiveSum = 0;		int negativeSum = 0;		for(int cntr = 0; cntr<10; cntr++ )		{			random1 = (int)(Math.random()*201 - 100);			if (random1 < 0)			{				negativeSum += random1;			}			if (random1 > 0)			{				positiveSum += random1;			}			System.out.printf("The random number is %4d%n", random1);		}		System.out.printf("The sum of the positive random integers is %5d%n", positiveSum);		System.out.printf("The sum of the negative random integers is %5d%n", negativeSum);		// *******************************************************************		System.out.println();		System.out.println();		// Part 4.  Do not delete the following code or move it.  		Scanner reader = new Scanner(System.in);		System.out.println("This part of the program calculates and prints the");		System.out.println("square roots of all integers between a lower limit");		System.out.println("and a upper number ... INCLUSIVE.\n");		System.out.print("Enter the value for the low limit of the range and press return: ");		int lower = reader.nextInt();		System.out.print("Enter the value for the upper limit of the range and press return: ");		int upper = reader.nextInt();		// STOP and write the method printSquareRootsInRange BELOW THE MAIN METHOD.		// Then call the method here and pass it the variables lower and upper.		// This is a void method call.		printSquareRootsInRange(lower,upper);		// *******************************************************************		System.out.println();		System.out.println();		// Part 5.  CONCATENATING WORDS TO MAKE A LIST		// Write a for loop that will run five times.  Each time the loop runs		// the user will enter a player to be added to a team.  Use the String		// variables team and player provided you.		// The loop should concatenate each player to a variable named team so 		// that a blank space is between each player on the team.		// After the loop is over, print the value contained in team.  Your		// output should be the same as what is seen below in the sample for the		// players entered.  Do NOT use a printf statement for output.		// Here is a sample run of the program for this code segment:			/*			Enter the name of a player and a blank space and press return: Amy 			Enter the name of a player and a blank space and press return: Ayesha			Enter the name of a player and a blank space and press return:  Sarah 			Enter the name of a player and a blank space and press return: Irene			Enter the name of a player and a blank space and press return: Sarah			Here is your team: Amy Ayesha Sarah Irene Sarah		 */		reader.nextLine();  // consume new line character from previous code segment		System.out.println("This part of the program adds players to a team.\n");		String team = "";		String player = "";		int cntr = 0;		for (cntr = 0; cntr < 5; cntr++)		{			System.out.println("Enter the name of a player and a blank space and press return:");			player = reader.nextLine();			team += player;		}		System.out.println("Here is your team: " + team);		// *******************************************************************		System.out.println();		System.out.println("Program Terminated.");	}	// Part 4 Method.  Write the void method printSquareRootsInRange that receives	// two integer parameters named lower and upper.  This method will use a 	// COUNT UP FOR LOOP that calculates the square root of all integers between	// lower and upper inclusive.  The square root will then be printed along	// with the number you are finding the square root of.  Right justify	// the number you are finding the square root of in a field width of 8. 	// Right justify the square root value in a field	// width of 15 with a precision of 10.	// Here is a sample run of the program for this code segment, if the value	// of 1 is entered for lower and the value of 10 is entered for upper.	/*		The square root of       1 is    1.0000000000		The square root of       2 is    1.4142135624		The square root of       3 is    1.7320508076		The square root of       4 is    2.0000000000		The square root of       5 is    2.2360679775		The square root of       6 is    2.4494897428		The square root of       7 is    2.6457513111		The square root of       8 is    2.8284271247		The square root of       9 is    3.0000000000		The square root of      10 is    3.1622776602	 */	public static void printSquareRootsInRange(int lower, int upper)	{		int cntr = 0;		for(cntr = lower; cntr <upper + 1; cntr++)		{			double num1 = Math.sqrt(cntr);			System.out.printf("The square root of %8d is %15.10f%n", cntr, num1);		}	}} // end ForLoopMania1.java